class in javascript

- we can create class in javascript by class keyword.
- in javascript each class has a method named "constructor"
- if we don't define this constructor method then it will be automatically created by javascript itself.
- we can create our own function in class.
- to create a function in class , we don't have to use function keyword.

- example 

	class Person6 {
	    constructor(name , yearOfBirth, job) {
	        this.name = name;
	        this.yearOfBirth = yearOfBirth;
	        this.job = job;
	    }

	    calculateAge(){
	        const age = new Date().getFullYear() - this.yearOfBirth;
	        console.log(age);
	    }
	}

	let pant6 = new Person6('pant', 1995, 'designer');
	pant6.calculateAge();

- other class can also inherit one class.

- example

	class Car {
	    constructor(brand) {
	        this.brand = brand;
	    }
	    present() {
	        return `I have ${this.brand}`;
	    }
	} 


	class Model extends Car {
	    constructor(brand , model) {
	        super(brand);
	        this.model = model;
	    }
	    show() {
	        return `${this.present()}, it is a ${this.model}`;
	    }
	}

	let myCar = new Model('Audi' , 'A6');
	console.log(myCar.show());

- example 2 

	class Person {
	    constructor(fullName , yearOfBirth , job) {
	        this.fullName = fullName;
	        this.yearOfBirth = yearOfBirth;
	        this.job = job;
	    }

	    calculateAge() {
	        let currentYear = new Date().getFullYear();
	        let age = currentYear - this.yearOfBirth;
	        console.log(age); 
	    }
	}

	class Athlete6 extends Person { 
	    constructor(fullName , yearOfBirth , job , olympicGames , medals) {
	        super(fullName , yearOfBirth , job);
	        this.olympicGames = olympicGames;
	        this.medals = medals;
	}

	    wonMedal () {
	        this.medals++;
	        console.log(this.medals)
	    }
	}

	let rohit = new Athlete6('rohit lalwani' , 1999 , 'cricketer' , 45 , 39);
	rohit.calculateAge();
	rohit.wonMedal();

- this way we can create class and subclasses in javascript.
- we can also achieve inheritance in javascript this way.
- to inherit the class we use extends keyword.
- unlike functions and other declarations , classes are not hoisted so we have to declare them before we use them.

---------------------------------------------------------------------------------------------------------------

 static methods in class

- we can also have static methods in a class
- we can define static methods in class by using static keyword.

- exmaple 	

	class Bike {
	    constructor(company) {
	        this.company = company;
	    }
	    static message () {
	        console.log("hello");
	    }
	}

- we can create object of class but can not call static method using object.
- we can only call static method using class name.
- so be carefull. we can not use static methods or we can not call static methods using object.

- example 

	Bike.message();

	let hero = new Bike('hero');
	hero.message(); // it will generate error. 

----------------------------------------------------------------------------------------------------------------------

super ()

- when we inherit a class then we can call the constructor of super class using super ().
- we have to call super ( ) from child class or we can say from sub class.

- example 

	class One {
	    constructor() {
	        console.log('Super class constructor');
	    }
	}
	
	class Two extends One {
	    constructor() {
	        super ();
	        console.log('Sub class constructor');
	    }
	}
	
	let obj = new Two();

-------------------------------------------------------------------------------------------------------------------------

getter and setter

- we can create getters and setters.
- using getters and setters , we can get and set the values of variables
- to create getters and setters we can use "get" and "set" keywords

- example 

	class Three {
	    constructor(std) {
	        this.std = std;
	    }

	    get stdName() {
	        console.log(this.std);
	    }
	    set stdName(x) {
	        this.std = x;
	    }
	}

	let obj1 = new Three(45);

- now if we can see that std variable has assigned 45. now if we have to set different value then we can do like ,
	
	obj1.stdName = 39;

- and if now we want to get the value then we have to do like, 

	obj1.stdName;   // this will print 39 to console.


	
